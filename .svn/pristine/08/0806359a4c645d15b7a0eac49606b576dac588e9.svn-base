/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.fabrica.sisgene.domain;

import java.io.Serializable;
import java.util.List;
import javax.json.JsonObjectBuilder;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author ASUS
 */
@Entity
@Table(name = "dispositivo")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "Dispositivo.findAll", query = "SELECT d FROM Dispositivo d"),
    @NamedQuery(name = "Dispositivo.findByDisId", query = "SELECT d FROM Dispositivo d WHERE d.disId = :disId"),
    @NamedQuery(name = "Dispositivo.findByDisNombre", query = "SELECT d FROM Dispositivo d WHERE d.disNombre = :disNombre"),
    @NamedQuery(name = "Dispositivo.findByDisDescripcion", query = "SELECT d FROM Dispositivo d WHERE d.disDescripcion = :disDescripcion"),
    @NamedQuery(name = "Dispositivo.findByDisMarca", query = "SELECT d FROM Dispositivo d WHERE d.disMarca = :disMarca"),
    @NamedQuery(name = "Dispositivo.findByDisModelo", query = "SELECT d FROM Dispositivo d WHERE d.disModelo = :disModelo"),
    @NamedQuery(name = "Dispositivo.findByDisSerie", query = "SELECT d FROM Dispositivo d WHERE d.disSerie = :disSerie"),
    @NamedQuery(name = "Dispositivo.findByDispositivo", query = "SELECT d FROM Dispositivo d WHERE d.disNombre = :disNombre AND d.disMarca = :disMarca AND d.disSerie = :disSerie")
})
public class Dispositivo extends AbstractEntity implements EntityItem<String> {
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "dis_id")
    private Integer disId;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 80)
    @Column(name = "dis_nombre")
    private String disNombre;
    @Size(max = 150)
    @Column(name = "dis_descripcion")
    private String disDescripcion;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 80)
    @Column(name = "dis_marca")
    private String disMarca;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 80)
    @Column(name = "dis_modelo")
    private String disModelo;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 10)
    @Column(name = "dis_serie")
    private String disSerie;
    @OneToMany(mappedBy = "disId")
    private List<UsuarioPersona> usuarioPersonaList;

    public Dispositivo() {
    }

    public Dispositivo(Integer disId) {
        this.disId = disId;
    }

    public Dispositivo(Integer disId, String disNombre, String disMarca, String disModelo, String disSerie) {
        this.disId = disId;
        this.disNombre = disNombre;
        this.disMarca = disMarca;
        this.disModelo = disModelo;
        this.disSerie = disSerie;
    }

    public Integer getDisId() {
        return disId;
    }

    public void setDisId(Integer disId) {
        this.disId = disId;
    }

    public String getDisNombre() {
        return disNombre;
    }

    public void setDisNombre(String disNombre) {
        this.disNombre = disNombre;
    }

    public String getDisDescripcion() {
        return disDescripcion;
    }

    public void setDisDescripcion(String disDescripcion) {
        this.disDescripcion = disDescripcion;
    }

    public String getDisMarca() {
        return disMarca;
    }

    public void setDisMarca(String disMarca) {
        this.disMarca = disMarca;
    }

    public String getDisModelo() {
        return disModelo;
    }

    public void setDisModelo(String disModelo) {
        this.disModelo = disModelo;
    }

    public String getDisSerie() {
        return disSerie;
    }

    public void setDisSerie(String disSerie) {
        this.disSerie = disSerie;
    }

    @XmlTransient
    public List<UsuarioPersona> getUsuarioPersonaList() {
        return usuarioPersonaList;
    }

    public void setUsuarioPersonaList(List<UsuarioPersona> usuarioPersonaList) {
        this.usuarioPersonaList = usuarioPersonaList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (disId != null ? disId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Dispositivo)) {
            return false;
        }
        Dispositivo other = (Dispositivo) object;
        if ((this.disId == null && other.disId != null) || (this.disId != null && !this.disId.equals(other.disId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.fabrica.sisgene.domain.Dispositivo[ disId=" + disId + " ]";
    }

    @Override
    public void addJson(JsonObjectBuilder builder) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String getId() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}
