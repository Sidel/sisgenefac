/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.fabrica.sisgene.domain;

import java.io.Serializable;
import java.util.List;
import javax.json.JsonObjectBuilder;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author ASUS
 */
@Entity
@Table(name = "seccion")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "Seccion.findAll", query = "SELECT s FROM Seccion s"),
    @NamedQuery(name = "Seccion.findBySecId", query = "SELECT s FROM Seccion s WHERE s.secId = :secId"),
    @NamedQuery(name = "Seccion.findBySecNombre", query = "SELECT s FROM Seccion s WHERE s.secNombre = :secNombre"),
    @NamedQuery(name = "Seccion.findBySecNota", query = "SELECT s FROM Seccion s WHERE s.secNota = :secNota"),
    @NamedQuery(name = "Seccion.findBySecNumeroSeccion", query = "SELECT s FROM Seccion s WHERE s.secNumeroSeccion = :secNumeroSeccion")})
public class Seccion extends AbstractEntity implements EntityItem<String> {
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "sec_id")
    private Integer secId;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 200)
    @Column(name = "sec_nombre")
    private String secNombre;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 300)
    @Column(name = "sec_nota")
    private String secNota;
    @Size(max = 4)
    @Column(name = "sec_numero_seccion")
    private String secNumeroSeccion;
    
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "sec_categoria")
    private String secCategoria;
    
    @Size(max = 30)
    @Column(name = "cae_id")
    private String caeId;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "secId")
    private List<EstructuraEncuesta> estructuraEncuestaList;

    public Seccion() {
    }

    public Seccion(Integer secId) {
        this.secId = secId;
    }

    public Seccion(Integer secId, String secNombre, String secNota, String secNumeroSeccion,
                   String secCategoria,
                   String caeId) {
        this.secId = secId;
        this.secNombre = secNombre;
        this.secNota = secNota;
        this.secNumeroSeccion = secNumeroSeccion;
        this.secCategoria = secCategoria;
        this.caeId=caeId;
    }

    public String getCaeId() {
        return caeId;
    }

    public void setCaeId(String caeId) {
        this.caeId = caeId;
    }
    
    public Integer getSecId() {
        return secId;
    }

    public void setSecId(Integer secId) {
        this.secId = secId;
    }

    public String getSecNombre() {
        return secNombre;
    }

    public void setSecNombre(String secNombre) {
        this.secNombre = secNombre;
    }

    public String getSecNota() {
        return secNota;
    }

    public void setSecNota(String secNota) {
        this.secNota = secNota;
    }

    public String getSecNumeroSeccion() {
        return secNumeroSeccion;
    }

    public void setSecNumeroSeccion(String secNumeroSeccion) {
        this.secNumeroSeccion = secNumeroSeccion;
    }

    public String getSecCategoria() {
        return secCategoria;
    }

    public void setSecCategoria(String secCategoria) {
        this.secCategoria = secCategoria;
    }

    @XmlTransient
    public List<EstructuraEncuesta> getEstructuraEncuestaList() {
        return estructuraEncuestaList;
    }

    public void setEstructuraEncuestaList(List<EstructuraEncuesta> estructuraEncuestaList) {
        this.estructuraEncuestaList = estructuraEncuestaList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (secId != null ? secId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Seccion)) {
            return false;
        }
        Seccion other = (Seccion) object;
        if ((this.secId == null && other.secId != null) || (this.secId != null && !this.secId.equals(other.secId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.fabrica.sisgene.domain.Seccion[ secId=" + secId + " ]";
    }

    @Override
    public void addJson(JsonObjectBuilder builder) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String getId() {
        return getSecId().toString();
    }
    
}
