/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.fabrica.sisgene.domain;

import java.io.Serializable;
import java.util.List;
import javax.json.JsonObjectBuilder;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author ASUS
 */
@Entity
@Table(name = "tipo_documento")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "TipoDocumento.findAll", query = "SELECT t FROM TipoDocumento t"),
    @NamedQuery(name = "TipoDocumento.findByTipId", query = "SELECT t FROM TipoDocumento t WHERE t.tipId = :tipId"),
    @NamedQuery(name = "TipoDocumento.findByTipNombre", query = "SELECT t FROM TipoDocumento t WHERE t.tipNombre = :tipNombre"),
    @NamedQuery(name = "TipoDocumento.findByTipDescripcion", query = "SELECT t FROM TipoDocumento t WHERE t.tipDescripcion = :tipDescripcion"),
    @NamedQuery(name = "TipoDocumento.findByTipLongitud", query = "SELECT t FROM TipoDocumento t WHERE t.tipLongitud = :tipLongitud"),
    @NamedQuery(name = "TipoDocumento.findByTipEstado", query = "SELECT t FROM TipoDocumento t WHERE t.tipEstado = :tipEstado"),
    @NamedQuery(name = "TipoDocumento.findByTipTipoCaracter", query = "SELECT t FROM TipoDocumento t WHERE t.tipTipoCaracter = :tipTipoCaracter")})
public class TipoDocumento extends AbstractEntity implements EntityItem<String>  {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Column(name = "tip_id")
    private Integer tipId;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 50)
    @Column(name = "tip_nombre")
    private String tipNombre;
    @Size(max = 50)
    @Column(name = "tip_descripcion")
    private String tipDescripcion;
    @Basic(optional = false)
    @NotNull
    @Column(name = "tip_longitud")
    private int tipLongitud;
    @Basic(optional = false)
    @NotNull
    @Column(name = "tip_estado")
    private char tipEstado;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2)
    @Column(name = "tip_tipo_caracter")
    private String tipTipoCaracter;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "tipId")
    private List<Persona> personaList;

    public TipoDocumento() {
    }

    public TipoDocumento(Integer tipId) {
        this.tipId = tipId;
    }

    public TipoDocumento(Integer tipId, String tipNombre, int tipLongitud, char tipEstado, String tipTipoCaracter) {
        this.tipId = tipId;
        this.tipNombre = tipNombre;
        this.tipLongitud = tipLongitud;
        this.tipEstado = tipEstado;
        this.tipTipoCaracter = tipTipoCaracter;
    }

    public Integer getTipId() {
        return tipId;
    }

    public void setTipId(Integer tipId) {
        this.tipId = tipId;
    }

    public String getTipNombre() {
        return tipNombre;
    }

    public void setTipNombre(String tipNombre) {
        this.tipNombre = tipNombre;
    }

    public String getTipDescripcion() {
        return tipDescripcion;
    }

    public void setTipDescripcion(String tipDescripcion) {
        this.tipDescripcion = tipDescripcion;
    }

    public int getTipLongitud() {
        return tipLongitud;
    }

    public void setTipLongitud(int tipLongitud) {
        this.tipLongitud = tipLongitud;
    }

    public char getTipEstado() {
        return tipEstado;
    }

    public void setTipEstado(char tipEstado) {
        this.tipEstado = tipEstado;
    }

    public String getTipTipoCaracter() {
        return tipTipoCaracter;
    }

    public void setTipTipoCaracter(String tipTipoCaracter) {
        this.tipTipoCaracter = tipTipoCaracter;
    }

    @XmlTransient
    public List<Persona> getPersonaList() {
        return personaList;
    }

    public void setPersonaList(List<Persona> personaList) {
        this.personaList = personaList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (tipId != null ? tipId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof TipoDocumento)) {
            return false;
        }
        TipoDocumento other = (TipoDocumento) object;
        if ((this.tipId == null && other.tipId != null) || (this.tipId != null && !this.tipId.equals(other.tipId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.fabrica.sisgene.domain.TipoDocumento[ tipId=" + tipId + " ]";
    }

    @Override
    public void addJson(JsonObjectBuilder builder) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String getId() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}
